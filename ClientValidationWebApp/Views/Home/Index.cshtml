@model ClientValidationWebApp.Models.PersonDetailsViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>


@using (Html.BeginForm("Register","Home"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PersonDetailsViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Basic details panel*@
        <div id="BasicDetailsPnl">

            <div class="container">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="nav">
                <input type="button" value="Next" class="btn btn-default" onclick="validateBasicDetails();"/>
            </div>

        </div>

        @*Contact details panel*@
        <div id="ContactDetailsPnl">

            <div class="container">
                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="nav">
                <input type="button" value="Prev" class="btn btn-default" onclick="showBasicDetailsPnl();" />
                <input type="button" value="Next" class="btn btn-default" onclick="validateContactDetails();" />
            </div>

        </div>

        @*Other details panel*@
        <div id="OtherDetailsPnl">

            <div class="container">
                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="nav">
                <input type="button" value="Prev" class="btn btn-default" onclick="showContactDetails();"/>
                <input type="submit" value="Finish" class="btn btn-default"/>
            </div>

        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //Get references to panel 
        var basicDetailsPnl = $("#BasicDetailsPnl");
        var contactDetailsPnl = $("#ContactDetailsPnl");
        var otherDetailsPnl = $("#OtherDetailsPnl");
        var form = $('form');

        //hide the panel at page load
        $(document).ready(function () {
            contactDetailsPnl.hide();
            otherDetailsPnl.hide();
        });

        //Next - Basic
        function validateBasicDetails() {

            var isValid = form.validate().element($('#FirstName'))
                & form.validate().element($('#Email'));

            if (isValid) {
                contactDetailsPnl.show();
                basicDetailsPnl.hide();
            }

            return isValid;
        }
        //Prev - Contact Details
        function showContactDetails() {
            otherDetailsPnl.hide();
            contactDetailsPnl.show();
        };

        //Next - Contact Details
        function validateContactDetails() {
            
            var isValid = form.validate().element($('#AddressLine1'))
                & form.validate().element($('#PostCode'));

            if (isValid) {
                otherDetailsPnl.show();
                contactDetailsPnl.hide();
            }

            return isValid;
        }
        //Prev - Other Details
        function showBasicDetailsPnl() {
            contactDetailsPnl.hide();
            basicDetailsPnl.show();
        };
    </script>
}
